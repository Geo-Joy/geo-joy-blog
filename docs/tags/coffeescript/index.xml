<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coffeescript on Geo&#39;z Blog</title>
    <link>https://geojoy.me/tags/coffeescript/</link>
    <description>Recent content in Coffeescript on Geo&#39;z Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Aug 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://geojoy.me/tags/coffeescript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>8 mois avec Backbone.js et ça dure !</title>
      <link>https://geojoy.me/post---copy/8-mois-avec-backbone-dot-js-et-ca-dure/</link>
      <pubDate>Mon, 06 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://geojoy.me/post---copy/8-mois-avec-backbone-dot-js-et-ca-dure/</guid>
      <description>Cela fait quelques temps déjà que j&amp;rsquo;utilise Backbone.JS and Friends, et bon je vais essayer de rester objectif sur le retour d&amp;rsquo;expérience que je compte développer.
Tout d&amp;rsquo;abord, ça roxe du poney (avis tout à fait objectif !) par rapport au développement classique d&amp;rsquo;IHM web (struts, dojo, etc.). Ceux qui me lisent et/ou me connaissent (en vrai) savent tout mon amour que je porte au développement Web (hum), qui plus est développement web avec des technologies compatibles IE2 (ActiveX sur Serveur jBoss par exemple) … voir IE tout court … hum hum :-)</description>
    </item>
    
    <item>
      <title>Génération de Hash conforme OWASP</title>
      <link>https://geojoy.me/post---copy/generation-de-hash-conforme-owasp/</link>
      <pubDate>Sun, 05 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://geojoy.me/post---copy/generation-de-hash-conforme-owasp/</guid>
      <description>Voici un module conforme aux conseils OWASP sur le hashage des mots de passe. Il s&amp;rsquo;agit d&amp;rsquo;un module (CommonJS) codé en CoffeeScript.
Le prinicpe est simple, choisir un algorithm, ajouter une graine key utlisée pour initialiser la chaine de hashage, en y ajoutant le message a hasher. Suivi d&amp;rsquo;iterations (souvent &amp;gt; 1000), permettant de ce fait d&amp;rsquo;ajouter des inconnues en cas de brute force.
 Il suffit alors pour comparer les hash de connaitre :</description>
    </item>
    
    <item>
      <title>Vérifier un RIO</title>
      <link>https://geojoy.me/post---copy/verifier-un-rio/</link>
      <pubDate>Sun, 05 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://geojoy.me/post---copy/verifier-un-rio/</guid>
      <description>Lors de mon inscription chez Free Mobile, j&amp;rsquo;ai eu quelques soucis liés à la récupération de mon RIO chez mon ancien opérateur. J&amp;rsquo;ai du faire la demande 6 ou 7 fois en utilisant le robot, en espérant recevoir le texto de validation, mais je n&amp;rsquo;ai jamais rien reçu.
Qui plus est, le serveur vocal était de mauvaise qualité (bim), de ce fait je n&amp;rsquo;entendais pas le RIO correctement, il simulait des pertes réseaux (paf).</description>
    </item>
    
    <item>
      <title>Backbone.js &amp; CoffeeScript</title>
      <link>https://geojoy.me/post---copy/backbone-dot-js-and-coffeescript/</link>
      <pubDate>Sat, 07 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://geojoy.me/post---copy/backbone-dot-js-and-coffeescript/</guid>
      <description>Cet article va traiter de l&amp;rsquo;utilisation de CoffeeScript dans le cadre de la réalisation d&amp;rsquo;une application Backbone.js.
Dans un premier, j&amp;rsquo;aborderai très rapidement le langage CoffeeScript, puis dans un second temps son utilisation dans l&amp;rsquo;écriture de script JavaScript.
CoffeeScript - &amp;ldquo;It&amp;rsquo;s just javascript !&amp;rdquo; Le CoffeeScript est un langage de programmation, qui une fois compilé produit du code Javascript. Le but principal de ce langage est de fournir à l&amp;rsquo;utilisateur une notation type POO (Programmation Orienté Objet), avec des mots clés comme extends, super, ainsi que de simplifier la syntaxe du Javascript.</description>
    </item>
    
    <item>
      <title>[Iced]CoffeeScript minification</title>
      <link>https://geojoy.me/post---copy/iced-coffeescript-minification/</link>
      <pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://geojoy.me/post---copy/iced-coffeescript-minification/</guid>
      <description>J&amp;rsquo;ai recherché un moyen de modifier la sortie du code généré par le compilateur CoffeeScript. En consultant la documentation, j&amp;rsquo;ai trouvé ceci
 Pour utiliser cette &amp;ldquo;extension&amp;rdquo;, il suffit d&amp;rsquo;invoquer la commande de la sorte :
coffee -bp -r ./ext.coffee file.coffee Pour faire fonctionner, cette extension pour le langage Iced CoffeeScript, il suffit de remplacer l&amp;rsquo;import &amp;ldquo;coffee-script&amp;rdquo; par &amp;ldquo;iced-coffee-script&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>