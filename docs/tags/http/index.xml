<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on Geo&#39;z Blog</title>
    <link>http://geojoy.me/tags/http/</link>
    <description>Recent content in Http on Geo&#39;z Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Apr 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://geojoy.me/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Access control Allow Origin Servlet Filter &amp; JSONP</title>
      <link>http://geojoy.me/post---copy/access-control-allow-origin-servlet-filter-jsonp/</link>
      <pubDate>Tue, 19 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://geojoy.me/post---copy/access-control-allow-origin-servlet-filter-jsonp/</guid>
      <description>Voici comment ajouter l&amp;rsquo;entÃªte HTTP Access-control-allow-origin, bien connu des utilisateurs de JSON, AMF ou tout simplement de service REST.
package org.zenithar.servlet.filters; import java.io.IOException; import javax.servlet.Filter; import javax.servlet.FilterChain; import javax.servlet.FilterConfig; import javax.servlet.ServletException; import javax.servlet.ServletOutputStream; import javax.servlet.ServletRequest; import javax.servlet.ServletResponse; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; /** * Add JSONP Support to enunciate. * * @author Thibault NORMAND * */ public class JsonpFilter implements Filter { private String functionName; @Override public void destroy() { } @Override public void doFilter(ServletRequest request, ServletResponse servletResponse, FilterChain chain) throws IOException, ServletException { if (!</description>
    </item>
    
  </channel>
</rss>